;;; WL-ELS  -*-Emacs-Lisp-*-
;;; Time-stamp: <00/03/01 09:58:40 teranisi>

;;;;;;;;;;;;;;;;;;;;;   DO NOT EDIT THIS FILE   ;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;     INTERNAL USE ONLY     ;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; generic modules
(defconst WL-MODULES '(
   wl wl-folder wl-summary wl-message
   wl-vars wl-draft wl-util wl-address
   wl-highlight wl-demo wl-refile wl-thread
   wl-fldmgr wl-expire wl-template wl-score
   ))

(defconst ELMO-MODULES '(
   elmo-util elmo-imap4 elmo-nntp elmo-archive
   elmo-localdir elmo-msgdb elmo-vars elmo2
   elmo-cache elmo-multi elmo-filter elmo-pipe
   elmo-dop elmo-pop3 elmo-localnews elmo-maildir
   elmo-date elmo-internal utf7
   ))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Emacsen
;; (< 20 emacs-major-version) && !(featurep 'mule)
(cond
 ((featurep 'xemacs)
  (setq WL-MODULES (append WL-MODULES (list 'wl-dnd 'wl-xmas)))
  (setq ELMO-MODULES (append (list 'elmo-database) ELMO-MODULES)))
 ((fboundp 'nemacs-version)
  (setq WL-MODULES (append WL-MODULES (list 'wl-nemacs))))
 ((featurep 'mule)
  (setq WL-MODULES (append WL-MODULES (list 'wl-mule)))))

(defconst WL-AUTOLOAD-MODULES '(
   auto-autoloads custom-load
   ))

(if (or (fboundp 'dynamic-link)
        ;; static
        (fboundp 'open-database))
    (add-to-list 'ELMO-MODULES 'elmo-database))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; tm-8 / SEMI

(if (module-installed-p 'mime-view)
    (progn
      (defconst wl-use-semi t)
      (setq WL-MODULES (append WL-MODULES (list 'wl-mime)))
      (setq ELMO-MODULES (append ELMO-MODULES (list 'mmelmo 'mmelmo-imap4))))
  (defconst wl-use-semi nil)
  (setq WL-MODULES (append WL-MODULES (list 'tm-wl)))
  )


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; FLIM 1.12 / FLIM 1.13
(cond
 ((module-installed-p 'luna)
  ;; FLIM 1.13 (SEMI/tm-8)
  (defconst wl-use-luna t)
  (setq ELMO-MODULES
	(append ELMO-MODULES
		(list 'mmelmo-2
		      'mmelmo-imap4-2))))
 (wl-use-semi
  ;; FLIM 1.12
  (defconst wl-use-luna nil)
  (setq ELMO-MODULES
	(append ELMO-MODULES
		(list 'mmelmo-1
		      'mmelmo-imap4-1))))
 )


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Utils
(defvar UTILS-MODULES '(rfc2368 wl-mailto))

;; OpenSSL/SSLeay package is also needed.
(if (module-installed-p 'base64)
    (add-to-list 'UTILS-MODULES 'ssl))

(defconst SASL-MODULES '(hmac-def hmac-md5 hmac-sha1
			 hex-util md5-dl md5-el md5
			 sha1-dl sha1-el sha1 sasl
			 scram-md5 digest-md5 unique-id))

(defvar modules-alist
  (list
   (cons ELMODIR ELMO-MODULES)
   (cons WLDIR WL-MODULES)
   (if (module-installed-p 'bbdb)
       (cons UTILSDIR (list 'bbdb-wl)))
   (if (exec-installed-p "imput")
       (cons UTILSDIR (list 'im-wl)))
   (if wl-install-utils
       (cons UTILSDIR UTILS-MODULES))
   ;; sasl does not work under Nemacs.
   (if (and wl-install-sasl
	    (not (fboundp 'nemacs-version)))
       (cons SASLDIR SASL-MODULES))
    ))
